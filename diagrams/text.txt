-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.categories (
  name text NOT NULL,
  slug text NOT NULL UNIQUE,
  parent_id uuid,
  description text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT categories_pkey PRIMARY KEY (id),
  CONSTRAINT categories_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.categories(id)
);
CREATE TABLE public.certificate_templates (
  name text NOT NULL,
  background_url text,
  layout jsonb,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT certificate_templates_pkey PRIMARY KEY (id)
);
CREATE TABLE public.chapters (
  course_id uuid NOT NULL,
  title text NOT NULL,
  description text,
  order_index integer NOT NULL,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  is_free boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT chapters_pkey PRIMARY KEY (id),
  CONSTRAINT chapters_course_id_fkey FOREIGN KEY (course_id) REFERENCES public.courses(id)
);
CREATE TABLE public.course_certificates (
  course_id uuid NOT NULL,
  user_id uuid NOT NULL,
  template_id uuid NOT NULL,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  issued_at timestamp with time zone DEFAULT now(),
  CONSTRAINT course_certificates_pkey PRIMARY KEY (id),
  CONSTRAINT course_certificates_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.certificate_templates(id),
  CONSTRAINT course_certificates_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT course_certificates_course_id_fkey FOREIGN KEY (course_id) REFERENCES public.courses(id)
);
CREATE TABLE public.course_enrollments (
  user_id uuid NOT NULL,
  course_id uuid NOT NULL,
  certificate_id uuid,
  last_accessed timestamp with time zone,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  progress numeric DEFAULT 0,
  completed boolean DEFAULT false,
  enrolled_at timestamp with time zone DEFAULT now(),
  CONSTRAINT course_enrollments_pkey PRIMARY KEY (id),
  CONSTRAINT course_enrollments_certificate_id_fkey FOREIGN KEY (certificate_id) REFERENCES public.course_certificates(id),
  CONSTRAINT course_enrollments_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id),
  CONSTRAINT course_enrollments_course_id_fkey FOREIGN KEY (course_id) REFERENCES public.courses(id)
);
CREATE TABLE public.courses (
  slug text NOT NULL UNIQUE,
  title text NOT NULL,
  tagline text,
  description text,
  language ARRAY,
  tags ARRAY,
  instructor_id ARRAY NOT NULL,
  category_id uuid,
  level USER-DEFINED NOT NULL,
  duration text,
  thumbnail_url text,
  promo_video_url text,
  seo_title text,
  seo_description text,
  certificate jsonb,
  rating double precision,
  pricing_id uuid,
  updated_by uuid,
  seo_keywords ARRAY,
  requirements ARRAY,
  learning_outcomes ARRAY,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  reviews_count integer DEFAULT 0,
  enrollments_count integer DEFAULT 0,
  featured boolean DEFAULT false,
  status USER-DEFINED NOT NULL DEFAULT 'draft'::course_status,
  visibility USER-DEFINED NOT NULL DEFAULT 'private'::course_visibility,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT courses_pkey PRIMARY KEY (id),
  CONSTRAINT courses_pricing_id_fkey FOREIGN KEY (pricing_id) REFERENCES public.pricing(id),
  CONSTRAINT courses_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id),
  CONSTRAINT courses_updated_by_fkey1 FOREIGN KEY (updated_by) REFERENCES public.users(id)
);
CREATE TABLE public.lessons (
  chapter_id uuid NOT NULL,
  title text NOT NULL,
  content_type USER-DEFINED NOT NULL,
  content_url text,
  content_body text,
  metadata jsonb,
  order_index integer NOT NULL,
  duration integer,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  is_preview boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT lessons_pkey PRIMARY KEY (id),
  CONSTRAINT lessons_chapter_id_fkey FOREIGN KEY (chapter_id) REFERENCES public.chapters(id)
);
CREATE TABLE public.pricing (
  pricing_model USER-DEFINED NOT NULL,
  base_price numeric,
  country_prices jsonb,
  subscription_details jsonb,
  discounts jsonb,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  default_currency text NOT NULL DEFAULT 'USD'::text,
  trial_available boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT pricing_pkey PRIMARY KEY (id)
);
CREATE TABLE public.users (
  id uuid NOT NULL,
  first_name text,
  last_name text,
  username text UNIQUE,
  avatar_url text,
  bio text,
  social_links jsonb,
  last_active_at timestamp with time zone,
  preferences jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  role text NOT NULL DEFAULT '''student''::text'::text,
  email character varying UNIQUE,
  phone text UNIQUE,
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);